// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2619.Resistance2019.subsystems;


import org.usfirst.frc2619.Resistance2019.Robot;
import org.usfirst.frc2619.Resistance2019.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.Relay.Value;

/**
 *
 */
public class IndicatorLights extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private Relay light;
    private Relay senseLight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public IndicatorLights() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        light = new Relay(0);
        addChild("Light",light);
        
        
        senseLight = new Relay(1);
        addChild("SenseLight",senseLight);
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
        lightOn();
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void lightOn(){
        light.set(Value.kOff);
        //The logic is inverse for this relay spike.
    }

    public void lightOff(){
        light.set(Value.kOn);
    }

    public void lightLineFollowOn(){
        senseLight.set(Value.kOn);
    }

    public void lightLineFollowOff(){
        senseLight.set(Value.kOff);
    }
    public void ballSenseOn(){
        
        int counter = 0;
        for(int x = 0; x < 5; x++)
        {
            if (Robot.sensorBar.isOneSensed()) x = 5;
            else{
            senseLight.set(Value.kOff);           
            while(counter <= 10000) counter++;
            counter = 0;
            senseLight.set(Value.kOn);
            while(counter <= 10000) counter++;         
            counter = 0;
            }        
        }
        if (Robot.sensorBar.isOneSensed())   senseLight.set(Value.kOn);
        else senseLight.set(Value.kOff);
        
    }
    public Relay.Value lightStatus()
    {
        return light.get();
    }
}

